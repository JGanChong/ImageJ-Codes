//Parameters to change
survey_width = 600; 
survey_height = 300;
box_size = 700000; //min area of the square
mean_flt = 80; //Mean filter amount

//Get title of the image
original = getTitle();

//Find image size to set bounds
getDimensions(iwidth, iheight, channels, slices, frames);

//Creates a copy
run("Duplicate...", " ");
run("8-bit"); //Conver to 8bit
run("Mean...", "radius="+mean_flt); //Mean filter

//Binary
setAutoThreshold("Default dark");
run("Auto Threshold", "method=Otsu white");
run("Fill Holes");
run("Analyze Particles...", "size="+box_size+"-Infinity show=Overlay clear add");
roiManager("Select", 0);
//Find center
run("Fit Circle");
Roi.getBounds(x, y, width, height);
xcenter = x+(width/2);
ycenter = y+(height/2);
roiManager("reset");
rename("mask");


//Survey the bottom of the image
makeRectangle(xcenter-(survey_width/2), iheight-survey_height , survey_width, survey_height);
run("Duplicate...", " ");
run("Variance...", "radius=1");
run("Analyze Particles...", "size=0-Infinity show=Overlay clear add");
roiManager("select", roiManager("count")-1);
Roi.getContainedPoints(xpoints, ypoints);
Fit.doFit("Straight Line", xpoints, ypoints);
bottom = Fit.rSquared;
anglebottom = Fit.p(1);

//Survey the top of the image
selectImage("mask");
makeRectangle(xcenter-(survey_width/2), 0 , survey_width, survey_height);
run("Duplicate...", " ");
run("Variance...", "radius=1");
run("Analyze Particles...", "size=0-Infinity show=Overlay clear add");
roiManager("select", roiManager("count")-1);
Roi.getContainedPoints(xpoints, ypoints);
Fit.doFit("Straight Line", xpoints, ypoints);
top = Fit.rSquared;
angletop = Fit.p(1);

//Find which has a better fitting (best side)
if (top>bottom) {
	radian = anglebottom = Fit.p(1);;
}
if (top<bottom) {
	radian = anglebottom;
}

//Rotate by that angle
good_angle = (Math.atan(-1*radian)*180)/3.14;
selectImage(original);
run("Rotate... ", "angle="+good_angle+" grid=1 interpolation=None");
close("\\Others");
